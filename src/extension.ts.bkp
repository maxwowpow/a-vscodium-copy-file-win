import * as vscode from 'vscode';
import AmathronUtilClipboardWin from '@amathron/copy-file-to-clipboard-win';

const dbg = false;

dbg && console.log('AMATHRON_SCRIPT_ROOT');

/*
// MAC
// Alternative way to handle clipboard on macOS
import { exec } from 'child_process';
exec('echo "test foo bar" | pbcopy', (err, stdout, stderr) => {
    console.log(stdout); // to confirm the application has been run
});
// LINUX
// Command to install clipboard utility on Linux
const linuxInstallCommand = `apt get install xclip`;
*/

export function activate(context: vscode.ExtensionContext): void {
    const vsCommands = vscode.commands;
    const vsWindow = vscode.window;

    dbg && console.log('Extension "amathron.copyfile" active.');

    const subscriptions = context.subscriptions;

    // Register command
    let disposable = vsCommands.registerCommand('amathron.copyfile.copyfile', async (uri: vscode.Uri) => {
        dbg && console.log('amathron.copyfile.copyfile TRIGGERED');
        try {
            const message = await AmathronUtilClipboardWin.copyFileToClipboardAsync([uri.fsPath]);
            vsWindow.showInformationMessage(message);
        } catch (error) {
            if (error instanceof Error) {
                vsWindow.showErrorMessage(error.message);
            } else {
                console.error(error);
            }
        }
    });

    subscriptions.push(disposable);
}

export function deactivate(context: vscode.ExtensionContext): void {
    const subscriptions = context.subscriptions;
    // Clean up, remove subscriptions, etc.
}
